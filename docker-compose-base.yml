version: '3'

services:
  django_nginx_secure_link_db:
    container_name: dnsl_postgres
    image: postgres:alpine
    restart: always
    networks:
      - db_network
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  django_nginx_secure_link:
    container_name: dnsl_backend
    build: ./backend
    restart: always
    volumes:
      - smb_share_with_files:/opt/services/django_nginx_secure_link/secure
      - static_volume:/opt/services/django_nginx_secure_link/static
      - media_volume:/opt/services/django_nginx_secure_link/media
    networks:
      - nginx_network
      - db_network
    environment:
      - PYTHONUNBUFFERED=1
      - MODE=${MODE} # dev/prod
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NGINX_SECRET=${NGINX_SECRET}
      - AUTH_LDAP_SERVER_URI=${AUTH_LDAP_SERVER_URI}
      - AUTH_LDAP_BIND_DN=${AUTH_LDAP_BIND_DN}
      - AUTH_LDAP_BIND_PASSWORD=${AUTH_LDAP_BIND_PASSWORD}
      - AUTH_LDAP_USER_SEARCH=${AUTH_LDAP_USER_SEARCH}
      - AUTH_LDAP_GROUP_SEARCH=${AUTH_LDAP_GROUP_SEARCH}
      - AUTH_LDAP_REQUIRE_GROUP=${AUTH_LDAP_REQUIRE_GROUP}
      - AUTH_LDAP_USER_FLAGS_BY_GROUP_IS_ACTIVE=${AUTH_LDAP_USER_FLAGS_BY_GROUP_IS_ACTIVE}
      - AUTH_LDAP_USER_FLAGS_BY_GROUP_IS_SUPERUSER=${AUTH_LDAP_USER_FLAGS_BY_GROUP_IS_SUPERUSER}
      - AUTH_LDAP_CACHE_TIMEOUT=${AUTH_LDAP_CACHE_TIMEOUT}
    depends_on:
      - django_nginx_secure_link_db

  django_nginx_secure_frontend:
    container_name: dnsl_frontend
    build: ./frontend
    restart: always
    volumes:
      - node_modules:/opt/services/django_nginx_secure_link/frontend/node_modules
    networks:
      - nginx_network
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - django_nginx_secure_link

  nginx:
    container_name: dnsl_nginx
    build: ./config/nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - smb_share_with_files:/opt/services/django_nginx_secure_link/secure
      - static_volume:/opt/services/django_nginx_secure_link/static
      - media_volume:/opt/services/django_nginx_secure_link/media
    networks:
      - nginx_network
    depends_on:
      - django_nginx_secure_frontend
      - django_nginx_secure_link
    environment:
      - MODE=${MODE} # dev/prod
      - NGINX_SECRET=${NGINX_SECRET}
      - DOMAIN_NAME=${DOMAIN_NAME}

networks:
  nginx_network:
    driver: bridge
  db_network:
    external: false

volumes:
  db_volume:
  node_modules:
  static_volume:
  media_volume:
  smb_share_with_files:
    driver: local
    driver_opts:
      type: cifs
      device: ${SERVERPATH}
      o: ${MOUNTOPTIONS}
